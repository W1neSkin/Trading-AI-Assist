<Window x:Class="TradingAiAssist.Admin.WPF.Views.ConfirmationDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TradingAiAssist.Admin.WPF.Views"
        xmlns:converters="clr-namespace:TradingAiAssist.Admin.WPF.Converters"
        mc:Ignorable="d"
        Title="{Binding Title}" 
        Height="250" 
        Width="450"
        WindowStartupLocation="CenterOwner"
        ResizeMode="NoResize"
        Background="#F5F5F5">

    <Window.Resources>
        <!-- Converters -->
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:ButtonStyleConverter x:Key="ButtonStyleConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <!-- Modern Button Style -->
        <Style x:Key="ModernButton" TargetType="Button">
            <Setter Property="Background" Value="#0078D4"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="20,10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#106EBE"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#005A9E"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#CCCCCC"/>
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Secondary Button Style -->
        <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#0078D4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#0078D4"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F0F8FF"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#E1F0FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Destructive Button Style -->
        <Style x:Key="DestructiveButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="#D13438"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#B91C1C"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#A01818"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Main Content -->
        <StackPanel Grid.Row="0" 
                    VerticalAlignment="Center"
                    Margin="30">
            
            <!-- Warning Icon for Destructive Actions -->
            <Border Width="60" 
                    Height="60" 
                    Background="{Binding IsDestructive, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=WarningBackground}"
                    CornerRadius="30"
                    HorizontalAlignment="Center"
                    Margin="0,0,0,20">
                <TextBlock Text="!" 
                           FontSize="32" 
                           FontWeight="Bold" 
                           Foreground="White"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
            </Border>

            <!-- Message -->
            <TextBlock Text="{Binding Message}" 
                       FontSize="16" 
                       TextWrapping="Wrap"
                       TextAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="0,0,0,20"/>

            <!-- Loading Indicator -->
            <ProgressBar IsIndeterminate="True" 
                         Height="4" 
                         Margin="0,0,0,20"
                         Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </StackPanel>

        <!-- Footer -->
        <Border Grid.Row="1" 
                Background="White" 
                Padding="30,20"
                BorderBrush="#E0E0E0" 
                BorderThickness="0,1,0,0">
            <StackPanel Orientation="Horizontal" 
                        HorizontalAlignment="Right">
                <Button Content="{Binding CancelButtonText}" 
                        Style="{StaticResource SecondaryButton}"
                        Command="{Binding CancelCommand}"
                        IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}"
                        Margin="0,0,10,0"/>
                <Button Content="{Binding ConfirmButtonText}" 
                        Style="{Binding IsDestructive, Converter={StaticResource ButtonStyleConverter}}"
                        Command="{Binding ConfirmCommand}"
                        IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}"/>
            </StackPanel>
        </Border>
    </Grid>
</Window> 